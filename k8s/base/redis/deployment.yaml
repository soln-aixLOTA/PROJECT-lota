apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: lotabots
spec:
  serviceName: redis
  replicas: 3
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7.2-alpine
        command: ["redis-server"]
        args: ["--requirepass", "$(REDIS_PASSWORD)", "--maxmemory", "8gb", "--maxmemory-policy", "allkeys-lru"]
        ports:
        - containerPort: 6379
          name: redis
        resources:
          requests:
            cpu: "1"
            memory: "2Gi"
          limits:
            cpu: "2"
            memory: "10Gi"
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password
        volumeMounts:
        - name: redis-data
          mountPath: /data
        livenessProbe:
          tcpSocket:
            port: redis
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          exec:
            command: ["redis-cli", "-a", "$(REDIS_PASSWORD)", "ping"]
          initialDelaySeconds: 5
          periodSeconds: 10
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: lotabots
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: redis
  clusterIP: None
---
apiVersion: v1
kind: Service
metadata:
  name: redis-headless
  namespace: lotabots
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: redis
  clusterIP: None 