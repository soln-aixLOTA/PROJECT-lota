apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: lotabots
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    rule_files:
      - /etc/prometheus/rules/*.yml

    scrape_configs:
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)

      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

      - job_name: 'api-gateway'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: api-gateway
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
            replacement: /metrics

      - job_name: 'inference-service'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: inference-service
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
            replacement: /metrics

      - job_name: 'redis'
        static_configs:
          - targets: ['redis:6379']
        metrics_path: /metrics
        relabel_configs:
          - source_labels: [__address__]
            target_label: instance

  recording.rules.yml: |
    groups:
      - name: api_gateway_rules
        rules:
        - record: api_gateway:request_latency:p95
          expr: histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket[5m])) by (le))
        - record: api_gateway:error_rate
          expr: sum(rate(http_requests_total{status=~"5.."}[5m])) / sum(rate(http_requests_total[5m]))
        - record: api_gateway:rate_limit_ratio
          expr: sum(rate(rate_limited_requests_total[5m])) / sum(rate(http_requests_total[5m]))

      - name: inference_service_rules
        rules:
        - record: inference:gpu_utilization:avg
          expr: avg(nvidia_gpu_duty_cycle) by (gpu)
        - record: inference:model_latency:p95
          expr: histogram_quantile(0.95, sum(rate(nv_inference_request_duration_us_bucket[5m])) by (le, model))
        - record: inference:throughput
          expr: sum(rate(nv_inference_request_success[5m])) by (model)

  alerts.rules.yml: |
    groups:
      - name: service_alerts
        rules:
        - alert: HighErrorRate
          expr: api_gateway:error_rate > 0.05
          for: 5m
          labels:
            severity: critical
          annotations:
            summary: High error rate detected
            description: Error rate is above 5% for the last 5 minutes

        - alert: HighLatency
          expr: api_gateway:request_latency:p95 > 0.5
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: High latency detected
            description: 95th percentile latency is above 500ms

        - alert: HighRateLimiting
          expr: api_gateway:rate_limit_ratio > 0.1
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: High rate limiting detected
            description: More than 10% of requests are being rate limited

        - alert: HighGPUUtilization
          expr: inference:gpu_utilization:avg > 90
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: High GPU utilization
            description: GPU utilization is above 90% for 10 minutes

        - alert: LowThroughput
          expr: inference:throughput < 10
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: Low inference throughput
            description: Model inference throughput is below 10 requests per second 