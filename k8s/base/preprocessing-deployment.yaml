apiVersion: apps/v1
kind: Deployment
metadata:
  name: preprocessing-service
  namespace: lotabots
  labels:
    app: preprocessing-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: preprocessing-service
  template:
    metadata:
      labels:
        app: preprocessing-service
      annotations:
        nvidia.com/gpu-accelerated: "true"
        nvidia.com/mps-capable: "true"
    spec:
      runtimeClassName: nvidia
      initContainers:
      - name: cuda-init
        image: nvcr.io/nvidia/cuda:12.0.0-base-ubuntu22.04
        command: ['nvidia-smi', '-pm', '1']
        securityContext:
          privileged: true
      containers:
      - name: preprocessing-service
        image: nvcr.io/nvidia/rapidsai/rapidsai:23.10-cuda12.0-runtime-ubuntu22.04-py3.10
        imagePullPolicy: Always
        command: ["python"]
        args: ["preprocessing_service.py"]
        ports:
        - containerPort: 8000
          name: http
        - containerPort: 9090
          name: metrics
        resources:
          requests:
            cpu: "4"
            memory: "16Gi"
            nvidia.com/gpu: "1"
            nvidia.com/gpu-memory: "16Gi"
          limits:
            cpu: "8"
            memory: "32Gi"
            nvidia.com/gpu: "1"
            nvidia.com/gpu-memory: "32Gi"
        envFrom:
        - configMapRef:
            name: nvidia-config
        - configMapRef:
            name: rapids-config
        env:
        - name: CUDA_VISIBLE_DEVICES
          value: "0"
        - name: DASK_DISTRIBUTED__WORKER__MEMORY__TARGET
          value: "0.8"
        - name: DASK_DISTRIBUTED__WORKER__MEMORY__SPILL
          value: "0.85"
        - name: DASK_DISTRIBUTED__WORKER__MEMORY__PAUSE
          value: "0.92"
        - name: DASK_DISTRIBUTED__WORKER__MEMORY__TERMINATE
          value: "0.95"
        - name: RAPIDS_NO_INITIALIZE
          value: "1"
        - name: CUPY_CACHE_DIR
          value: "/cache/cupy"
        - name: NUMBAPRO_CACHE_DIR
          value: "/cache/numba"
        - name: RAPIDS_DATASET_PATH
          value: "/data"
        volumeMounts:
        - name: data
          mountPath: /data
        - name: dshm
          mountPath: /dev/shm
        - name: cache
          mountPath: /cache
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 30
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: preprocessing-data-pvc
      - name: dshm
        emptyDir:
          medium: Memory
          sizeLimit: "4Gi"
      - name: cache
        emptyDir:
          medium: Memory
          sizeLimit: "2Gi"
      nodeSelector:
        nvidia.com/gpu: "present"
        nvidia.com/cuda-version: "12.0"
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: nvidia.com/gpu.product
                operator: In
                values:
                - Tesla-A100
                - Tesla-H100
                - Tesla-V100
              - key: nvidia.com/gpu.memory
                operator: Gt
                values:
                - "16"
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - preprocessing-service
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: preprocessing-service
  namespace: lotabots
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: http
    protocol: TCP
    name: http
  - port: 9090
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app: preprocessing-service
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: preprocessing-data-pvc
  namespace: lotabots
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 500Gi
  storageClassName: standard
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: preprocessing-service-hpa
  namespace: lotabots
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: preprocessing-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: nvidia.com/gpu
      target:
        type: AverageValue
        averageValue: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Pods
        value: 2
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Pods
        value: 1
        periodSeconds: 120
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: preprocessing-service-pdb
  namespace: lotabots
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: preprocessing-service 