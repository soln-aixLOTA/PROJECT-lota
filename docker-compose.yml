version: '3.8'

networks:
  frontend_network:
    driver: bridge
  backend_network:
    driver: bridge
  monitoring_network:
    driver: bridge

services:
  # Frontend Service
  web:
    image: nginx:alpine
    networks:
      - frontend_network
    ports:
      - "80:80"
    volumes:
      - ./frontend:/usr/share/nginx/html
    depends_on:
      - api

  # API Service
  api:
    build: ./api
    networks:
      - frontend_network
      - backend_network
    ports:
      - "3000:3000"
    environment:
      - DB_HOST=postgres
      - DB_USER=lotabots
      - DB_PASSWORD=development
      - DB_NAME=lotabots
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Database Service
  postgres:
    image: postgres:14-alpine
    networks:
      - backend_network
    environment:
      POSTGRES_USER: lotabots
      POSTGRES_PASSWORD: development
      POSTGRES_DB: lotabots
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U lotabots" ]
      interval: 5s
      timeout: 5s
      retries: 5

  # Cache Service
  redis:
    image: redis:6-alpine
    networks:
      - backend_network
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  # Message Queue
  rabbitmq:
    image: rabbitmq:3-management
    networks:
      - backend_network
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=lotabots
      - RABBITMQ_DEFAULT_PASS=development
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 5s
      timeout: 5s
      retries: 5

  # Monitoring Services
  prometheus:
    image: prom/prometheus:latest
    networks:
      - monitoring_network
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  grafana:
    image: grafana/grafana:latest
    networks:
      - monitoring_network
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

  # Worker Services
  worker:
    build: ./worker
    networks:
      - backend_network
      - monitoring_network
    environment:
      - DB_HOST=postgres
      - DB_USER=lotabots
      - DB_PASSWORD=development
      - DB_NAME=lotabots
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://lotabots:development@rabbitmq:5672
      - PROMETHEUS_URL=http://prometheus:9090
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  # Background Tasks
  scheduler:
    build: ./scheduler
    networks:
      - backend_network
    environment:
      - DB_HOST=postgres
      - DB_USER=lotabots
      - DB_PASSWORD=development
      - DB_NAME=lotabots
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://lotabots:development@rabbitmq:5672
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:
