name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: "-D warnings"

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: lotabots_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential curl pkg-config libssl-dev

      - uses: actions/checkout@v4

      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source "$HOME/.cargo/env"
          rustup component add rustfmt clippy

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting
        run: |
          source "$HOME/.cargo/env"
          cargo fmt --all -- --check

      - name: Clippy
        run: |
          source "$HOME/.cargo/env"
          cargo clippy --all-targets --all-features -- -D warnings

      - name: Run tests
        run: |
          source "$HOME/.cargo/env"
          cargo test --all-features
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/lotabots_test
          REDIS_URL: redis://localhost:6379/0

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential curl pkg-config libssl-dev

      - uses: actions/checkout@v4

      - name: Install Rust and cargo-audit
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source "$HOME/.cargo/env"
          cargo install cargo-audit

      - name: Run security audit
        run: |
          source "$HOME/.cargo/env"
          cargo audit

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, security-audit]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io

      - uses: actions/checkout@v4

      - name: Set up Docker
        run: |
          sudo systemctl start docker
          sudo docker --version

      - name: Login to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | sudo docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push Docker images
        run: |
          sudo docker build -t ghcr.io/${{ github.repository }}/user-management:latest \
                          -t ghcr.io/${{ github.repository }}/user-management:${{ github.sha }} .
          sudo docker push ghcr.io/${{ github.repository }}/user-management:latest
          sudo docker push ghcr.io/${{ github.repository }}/user-management:${{ github.sha }}
