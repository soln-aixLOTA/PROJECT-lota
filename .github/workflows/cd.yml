name: CD

on:
  push:
    tags:
      - "v*"

env:
  REGISTRY: ghcr.io
  NAMESPACE: lotabots

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY }}/${{ github.repository }}/attestation
            ${{ env.REGISTRY }}/${{ github.repository }}/api_gateway

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Attestation image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: src/attestation/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}/attestation:${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push API Gateway image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: src/api_gateway/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}/api_gateway:${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "v1.24.0"

      - name: Configure kubectl
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yaml
          chmod 600 kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml

      - name: Deploy to Kubernetes
        run: |
          # Update image tags in deployment files
          VERSION=${{ github.ref_name }}
          for service in attestation api_gateway; do
            sed "s|IMAGE_TAG|$VERSION|g" k8s/$service/deployment.yaml | kubectl apply -f -
          done

          # Apply other resources
          kubectl apply -f k8s/common/
          find k8s/*/service.yaml -exec kubectl apply -f {} \;

          # Wait for deployments to be ready
          kubectl wait --for=condition=available --timeout=300s deployment --all -n ${{ env.NAMESPACE }}

      - name: Verify Deployment
        run: |
          kubectl get pods,services -n ${{ env.NAMESPACE }}

      - name: Clean up
        if: always()
        run: rm -f kubeconfig.yaml
